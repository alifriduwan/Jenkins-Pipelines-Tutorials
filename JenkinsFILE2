pipeline {
    agent any

    parameters {
        choice(name: 'ENV', choices: ['dev', 'staging', 'prod'], description: 'Deployment environment')
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building application...'
            }
        }

        stage('Test in Parallel') {
            steps {
                script {
                    parallel(
                        'Unit Tests': {
                            echo 'Running unit tests...'
                            sh 'sleep 3'
                        },
                        'Integration Tests': {
                            echo 'Running integration tests...'
                            sh 'sleep 3'
                        }
                    )
                }
            }
        }

        stage('OS Simulation') {
            steps {
                script {
                    parallel(
                        'Linux Sim': {
                            echo 'Simulating tests on Linux...'
                            sh 'echo "Linux OK"'
                        },
                        'Windows Sim': {
                            echo 'Simulating tests on Windows...'
                            sh 'echo "Windows OK"'
                        }
                    )
                }
            }
        }

        stage('Test') {
            steps {
                sh 'echo "All tests passed!" > results.txt'
                archiveArtifacts artifacts: 'results.txt', fingerprint: true
            }
        }

        stage('Approval') {
            steps {
                timeout(time: 20, unit: 'SECONDS') {
                    input "Do you want to proceed with deployment?"
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying to environment: ${params.ENV}"
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline finished successfully!'
        }
        failure {
            echo '❌ Pipeline failed. Check logs!'
        }
        always {
            echo 'Pipeline completed (success or failure).'
        }
    }
}
